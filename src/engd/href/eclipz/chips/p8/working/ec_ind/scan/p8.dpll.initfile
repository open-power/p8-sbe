#-- IBM_PROLOG_BEGIN_TAG
#-- This is an automatically generated prolog.
#--
#-- OpenPOWER Project
#--
#-- Contributors Listed Below - COPYRIGHT 2012,2016
#-- [+] International Business Machines Corp.
#--
#--
#-- Licensed under the Apache License, Version 2.0 (the "License");
#-- you may not use this file except in compliance with the License.
#-- You may obtain a copy of the License at
#--
#--     http://www.apache.org/licenses/LICENSE-2.0
#--
#-- Unless required by applicable law or agreed to in writing, software
#-- distributed under the License is distributed on an "AS IS" BASIS,
#-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
#-- implied. See the License for the specific language governing
#-- permissions and limitations under the License.
#--
#-- IBM_PROLOG_END_TAG





#--------------------------------------------------------------------------------
# Required keywords/variables
#--------------------------------------------------------------------------------
SyntaxVersion = 1

# Define env types:
define def_SIM    = (U);    # Simulation only
define def_HW     = (W);    # Hardware




#--------------------------------------------------------------------------------
# Settings for P8 EX Core DPLLs
#--------------------------------------------------------------------------------

#--- Binary Spys ---
ispy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.VREG_TUNE [when=L] {
  spyv,                  env,        expr;
  0b0000,                def_SIM,    any;
  0b0000,                def_HW,     any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
  }

ispy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.RANGE1 [when=L] {
  spyv,                  env,        expr;
  0b00000,               def_SIM,    any;
  0b00000,               def_HW,     any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
  }

ispy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.RANGE2 [when=L] {
  spyv,                  env,        expr;
  0b00000,               def_SIM,    any;
  0b00000,               def_HW,     any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
  }

ispy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.VC_PARAM_DC [when=L] {
  spyv,                  env,        expr;
  0b000,                 def_SIM,    any;
  0b000,                 def_HW,     any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
  }

ispy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.VC_PARAM_NC [when=L] {
  spyv,                  env,        expr;
  0b000000000000,        def_SIM,    any;
  0b000000000000,        def_HW,     any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
  }

ispy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.ROW_OVERRIDE_DC [when=L] {
  spyv,                  env,        expr;
  0b000000000000000,     def_SIM,    any;
  0b000000000000000,     def_HW,     any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
  }

ispy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.REF_DIV [when=L] {
  spyv,                  env,        expr;
  0b000001,              def_SIM,    any;
  0b000001,              def_HW,     any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
  }

ispy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.LOCK_PHASE_SENSE [when=L] {
  spyv,                  env,        expr;
  0b000,                 def_SIM,    any;
  0b000,                 def_HW,     any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
  }

ispy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.LF_FASTPROP_DC [when=L] {
  spyv,                  env,        expr;
  0b10000,               def_SIM,    any;
  0b10000,               def_HW,     any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
  }

ispy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.LF_SDORDER_DC [when=L] {
  spyv,                  env,        expr;
  0b10,                  def_SIM,    any;
  0b10,                  def_HW,     any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
  }

ispy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.LF_PARAM_DC [when=L] {
  spyv,                  env,        expr;
  0b101000101,           def_SIM,    any;
  0b101000101,           def_HW,     any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
  }

ispy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.LF_PARAM_NC [when=L] {
  spyv,                  env,        expr;
  0b0000000,             def_SIM,    any;
  0b0000000,             def_HW,     any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
  }

ispy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.FF_PARAM_DC [when=L] {
  spyv,                  env,        expr;
  0b00001,               def_SIM,    any;
  0b00001,               def_HW,     any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
  }

ispy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.FF_PARAM_NC [when=L] {
  spyv,                  env,        expr;
  0b000000000,           def_SIM,    any;
  0b000000000,           def_HW,     any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
  }

ispy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.NC_AEC [when=L] {
  spyv,                  env,        expr;
  0b00,                  def_SIM,    any;
  0b00,                  def_HW,     any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
  }

ispy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.CPM_PARAM_DC [when=L] {
  spyv,                  env,        expr;
  0b000110100010,        def_SIM,    any;
  0b000110100010,        def_HW,     any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
  }

ispy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.CPM_PARAM_DC_INT [when=L] {
  spyv,                  env,        expr;
  0b0000,                def_SIM,    any;
  0b0000,                def_HW,     any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
  }

ispy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.CD_SDORDER_DC [when=L] {
  spyv,                  env,        expr;
  0b10,                  def_SIM,    any;
  0b10,                  def_HW,     any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
  }

ispy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.CD_DIV124_DC [when=L] {
  spyv,                  env,        expr;
  0b01,                  def_SIM,    any;
  0b01,                  def_HW,     any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
  }

ispy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.CD_DPLLOUT124_DC [when=L] {
  spyv,                  env,        expr;
  0b10,                  def_SIM,    any;
  0b10,                  def_HW,     any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
  }

ispy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.STARTUP [when=L] {
  spyv,                  env,        expr;
  0b00,                  def_SIM,    any;
  0b00,                  def_HW,     any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
  }

ispy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.NOCONN [when=L] {
  spyv,                  env,        expr;
  0b000,                 def_SIM,    any;
  0b000,                 def_HW,     any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
  }


#--- Ennumerated Spys---
espy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.INTFBK_SEL [when=L] {
   spyv,               env,         expr;
   ON,                 def_SIM,     any;
   ON,                 def_HW,      any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
   }

espy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.REFCLK_SEL [when=L] {
   spyv,               env,         expr;
   ON,                 def_SIM,     any;
   ON,                 def_HW,      any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
   }

espy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.LOCK_PHASE_ENABLE [when=L] {
   spyv,               env,         expr;
   OFF,                def_SIM,     any;
   OFF,                def_HW,      any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
   }

espy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.LOCK_PHASE_SEL [when=L] {
   spyv,               env,         expr;
   OFF,                def_SIM,     any;
   OFF,                def_HW,      any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
   }

espy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.LF_LINEARPROP_DC [when=L] {
   spyv,               env,         expr;
   OFF,                def_SIM,     any;
   OFF,                def_HW,      any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
   }

espy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.LF_PFDTO1_DC [when=L] {
   spyv,               env,         expr;
   OFF,                def_SIM,     any;
   OFF,                def_HW,      any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
   }

espy EXP.TP.ECO_DOM.DPLL.DIGI.CFG.LF_PFDTO0_DC [when=L] {
   spyv,               env,         expr;
   OFF,                def_SIM,     any;
   OFF,                def_HW,      any;    # (pu_ex_dpll_freq == 4800);   # TODO: add the HW frequency settings
   }



#-- *****************************************************************************
#-- CHANGE HISTORY:
#-- -----------------------------------------------------------------------------
#$Log: p8.dpll.initfile,v $
#Revision 1.5  2013/08/08 15:33:48  campisan
#Added CPM inits based on Tim Diemoz's file
#
#Revision 1.4  2013/01/04 19:53:40  koenig
#Replacing HW freq 4800 by ANY - AK
#
#Revision 1.3  2012/12/17 22:17:25  mfred
#Moved some things around and set owner to Tim Diemoz.
#
#Revision 1.2  2012/11/30 17:52:41  jmcgill
#fix width of data supplied for CPM_PARAM_DC
#
#Revision 1.1  2012/11/28 22:02:34  mfred
#Created file by separating p8.pll.initfile into three parts.
#
#Revision 1.4  2012/11/28 16:49:41  mfred
#Aligned up the columns for readability.
#
#Revision 1.3  2012/11/28 16:44:46  mfred
#Added settings for EX DPLL.
#
#Revision 1.2  2012/11/27 22:04:35  mfred
#Added env column to select between SIM and HW.
#
#Revision 1.1  2012/11/21 19:15:34  mfred
#Adding new file.
#
#--
